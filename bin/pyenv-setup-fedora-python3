#!/usr/bin/env bash
#
# Summary: Setup a pyenv version for the system Python 3
#
# Usage: pyenv setup-fedora-python3 <pyenv-name>
#

version_name_file="$PYENV_ROOT/.fedora-python3"
if [ -f "$version_name_file" ]; then
  suggested_name=$(<"$version_name_file")
else
  suggested_name=system3
fi

# Provide pyenv completions
if [ "$1" = "--complete" ]; then
  if [ -z "$2" ]; then
    echo $suggested_name
  fi
  exit 0
fi

if [ -z "$1" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  pyenv-help setup-fedora-python3
  exit 1
else
  version_name="$1"
fi

whatrequires() {
  rpm --query --whatrequires "$*"
}

binaries() {
  packages="python3 $(whatrequires python3; whatrequires /usr/bin/python3)"

  for p in $packages; do
    rpm --query --list "$p" | grep ^/usr/bin
  done
}

suffix_3_binaries() {
  for bin in "$bin_path"/*; do
    sed --silent --expression 's/\([^0-9.]\)3$/\1/p' <<<$(basename "$bin")
  done
}

link_name() {
  sed --expression s/^python3-// <<<$(basename "$1")
}

bin_path="$PYENV_ROOT/versions/$version_name/bin"

mkdir --parents "$bin_path"
echo "$version_name" > "$version_name_file"

binaries | (while read bin; do
  link=$(link_name "$bin")
  ln --symbolic --force "$bin" "$bin_path/$link"
  echo "Linking command '$link'" >&2
  done)

for bin in $(suffix_3_binaries); do
  ln --symbolic --force "$bin_path/${bin}3" "$bin_path/${bin}"
  echo "Linking command '$bin'" >&2
done

echo "Installed system Python 3 as pyenv version '$version_name'" >&2
